{
    "GEN": {
        "TITLE": "LimboDNS",
        "NOW": "Now",
        "CREATE": "Create",
        "DELETE": "Delete",
        "SAVE": "Save",
        "EDIT": "Edit",
        "INFO": "Info",
        "BACK": "Back",
        "RELOAD": "Reload",
        "GENERATED": "Generated",
        "UNDO": "Undo"
    },
    "LOGIN": {
        "TITLE": "Login",
        "USER": "Username",
        "PASS": "Password",
        "SUBMIT": "Let me in",
        "IN": "Login",
        "OUT": "Logout"
    },
    "HOME": {
        "TITLE": "Zones",
        "SUBTITLE": "All the zones managed by this LimboDNS.",
        "ZONE": "Zone",
        "NAMESERVER": "Nameserver",
        "RECORDS": "Records",
        "NAME_HINT": "Don't forget the trailing dot indicating an absolute name.",
        "NAMESERVER_HINT": "Authoritative name server for this zone. Used for auto-generation of required NS and SOA records."
    },
    "ZONE": {
        "TITLE": "Zone",
        "RR_NAME": "Name",
        "RR_TYPE": "Type",
        "RR_DATE": "Last change/update",
        "RR_TTL": "TTL",
        "RR_TOKEN": "DynDNS Update Token",
        "RR_VALUE": "Value",
        "TOKENGEN": "Generate token"
    },
    "RECORD": {
        "TITLE": "DynDNS Update Instructions",
        "SUBTITLE": "for {{type}} record: ",
        "NO_TOKEN": "No token specified!",
        "NO_TOKEN_HINT": "To use the DynDNS feature you need to set a token for your record. The token is your unique identifier and password, so choose a proper length.",
        "API_GEN_EXAMPLES": "Wget and cUrl examples (with forced IP protocol version):",
        "API_SIMPLE_TITLE": "LimboDNS Simple API",
        "API_SIMPLE_DESC": "This as-simple-as-possible HTTP API has everything you need straight in the URL. No headers, no parameters, no json, no body ... just the URL, get or post. Simply make a HTTP call like this:",
        "API_SIMPLE_BODY1": "Update with autodetected aka the clients IP (Note that this might cause trouble on dual-stack IPv4+IPv6 setups):",
        "API_SIMPLE_BODY2": "Update with IP/value specified:",
        "API_SIMPLE_BODY3": "Update with IPv4 and IPv6 specified in one request (A and AAAA records need to have the same update token):"
    },
    "error": {
        "net": {
            "gen": "Network error.",
            "upload": "Upload failed."
        },
        "sys": {
            "gen": "System failure."
        },
        "sec": {
            "forbidden": "Forbidden. Permission denied.",
            "unauthorized": "Unauthorized. Please log in."
        },
        "notfound": {
            "gen": "Not found.",
            "zone": ""
        },
        "val": {
            "gen": "Validation failed.",
            "known_key": "Illegal value detected: {{valueReceived}}. Allowed values: {{valuesAllowed}}",
            "with_details": "An error with details and mainParam {{mainParam}}",
            "detail": {
                "zone_name_exists": "Name already exists.",
                "zone_name_invalid": "Name must be an absolute name ending with '.' and characters: 'a-zA-Z0-9-_.'.",
                "nameserver_invalid": "Nameserver must be an absolute name ending with '.' and characters: 'a-zA-Z0-9-_.'.",
                "record_name_invalid": "Name must be a relative name with characters: 'a-zA-Z0-9-_.@*'.",
                "record_type_invalid": "Type must be one of: 'A','AAAA','CNAME','MX','TXT'.",
                "record_token_invalid": "Token only allows characters: 'a-zA-Z0-9-'.",
                "value_invalid": "Value invalid.",
                "record_value_a_invalid": "A value must a valid IPv4 address.",
                "record_value_aaaa_invalid": "AAAA value must be a valid IPv6 address.",
                "record_value_cname_invalid": "CNAME value must be an absolute name ending with '.' and characters: 'a-zA-Z0-9-_.'.",
                "record_value_mx_invalid": "MX value must be an absolute name ending with '.' and characters: 'a-zA-Z0-9-_.'.",
                "record_value_txt_invalid": "TXT value only allows characters: 'a-zA-Z0-9-_@,/:;\"?=+. '.",
                "record_name_conflict": "There's either one CNAME or multiple OTHER records allowed with the same name.",
                "record_token_exists": "Same token cannot be used for multiple records with different types."
            }
        }
    }
}
